
from collections import namedtuple


Plural = namedtuple('Plural', 'code name forms')

# See http://docs.translatehouse.org/projects/localization-guide/en/latest/l10n/pluralforms.html
plural_forms = (
    Plural('ach', 'Acholi', 'nplurals=2; plural=(n > 1);'),
    Plural('af', 'Afrikaans', 'nplurals=2; plural=(n != 1);'),
    Plural('ak', 'Akan', 'nplurals=2; plural=(n > 1);'),
    Plural('am', 'Amharic', 'nplurals=2; plural=(n > 1);'),
    Plural('an', 'Aragonese', 'nplurals=2; plural=(n != 1);'),
    Plural('anp', 'Angika', 'nplurals=2; plural=(n != 1);'),
    Plural('ar', 'Arabic [1]', 'nplurals=6; plural=(n==0 ? 0 : n==1 ? 1 : n==2 ? 2 : n%100>=3 && n%100<=10 ? 3 : n%100>=11 ? 4 : 5);'),
    Plural('arn', 'Mapudungun', 'nplurals=2; plural=(n > 1);'),
    Plural('as', 'Assamese', 'nplurals=2; plural=(n != 1);'),
    Plural('ast', 'Asturian', 'nplurals=2; plural=(n != 1);'),
    Plural('ay', 'Aymará', 'nplurals=1; plural=0;'),
    Plural('az', 'Azerbaijani', 'nplurals=2; plural=(n != 1);'),
    Plural('be', 'Belarusian', 'nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);'),
    Plural('bg', 'Bulgarian', 'nplurals=2; plural=(n != 1);'),
    Plural('bn', 'Bengali', 'nplurals=2; plural=(n != 1);'),
    Plural('bo', 'Tibetan', 'nplurals=1; plural=0;'),
    Plural('br', 'Breton', 'nplurals=2; plural=(n > 1);'),
    Plural('brx', 'Bodo', 'nplurals=2; plural=(n != 1);'),
    Plural('bs', 'Bosnian', 'nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);'),
    Plural('ca', 'Catalan', 'nplurals=2; plural=(n != 1);'),
    Plural('cgg', 'Chiga', 'nplurals=1; plural=0;'),
    Plural('cs', 'Czech', 'nplurals=3; plural=(n==1) ? 0 : (n>=2 && n<=4) ? 1 : 2;'),
    Plural('csb', 'Kashubian', 'nplurals=3; plural=(n==1) ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2;'),
    Plural('cy', 'Welsh', 'nplurals=4; plural=(n==1) ? 0 : (n==2) ? 1 : (n != 8 && n != 11) ? 2 : 3;'),
    Plural('da', 'Danish', 'nplurals=2; plural=(n != 1);'),
    Plural('de', 'German', 'nplurals=2; plural=(n != 1);'),
    Plural('doi', 'Dogri', 'nplurals=2; plural=(n != 1);'),
    Plural('dz', 'Dzongkha', 'nplurals=1; plural=0;'),
    Plural('el', 'Greek', 'nplurals=2; plural=(n != 1);'),
    Plural('en', 'English', 'nplurals=2; plural=(n != 1);'),
    Plural('eo', 'Esperanto', 'nplurals=2; plural=(n != 1);'),
    Plural('es', 'Spanish', 'nplurals=2; plural=(n != 1);'),
    Plural('es_AR', 'Argentinean Spanish', 'nplurals=2; plural=(n != 1);'),
    Plural('et', 'Estonian', 'nplurals=2; plural=(n != 1);'),
    Plural('eu', 'Basque', 'nplurals=2; plural=(n != 1);'),
    Plural('fa', 'Persian', 'nplurals=2; plural=(n > 1);'),
    Plural('ff', 'Fulah', 'nplurals=2; plural=(n != 1);'),
    Plural('fi', 'Finnish', 'nplurals=2; plural=(n != 1);'),
    Plural('fil', 'Filipino', 'nplurals=2; plural=(n > 1);'),
    Plural('fo', 'Faroese', 'nplurals=2; plural=(n != 1);'),
    Plural('fr', 'French', 'nplurals=2; plural=(n > 1);'),
    Plural('fur', 'Friulian', 'nplurals=2; plural=(n != 1);'),
    Plural('fy', 'Frisian', 'nplurals=2; plural=(n != 1);'),
    Plural('ga', 'Irish', 'nplurals=5; plural=n==1 ? 0 : n==2 ? 1 : (n>2 && n<7) ? 2 :(n>6 && n<11) ? 3 : 4;'),
    Plural('gd', 'Scottish Gaelic', 'nplurals=4; plural=(n==1 || n==11) ? 0 : (n==2 || n==12) ? 1 : (n > 2 && n < 20) ? 2 : 3;'),
    Plural('gl', 'Galician', 'nplurals=2; plural=(n != 1);'),
    Plural('gu', 'Gujarati', 'nplurals=2; plural=(n != 1);'),
    Plural('gun', 'Gun', 'nplurals=2; plural=(n > 1);'),
    Plural('ha', 'Hausa', 'nplurals=2; plural=(n != 1);'),
    Plural('he', 'Hebrew', 'nplurals=2; plural=(n != 1);'),
    Plural('hi', 'Hindi', 'nplurals=2; plural=(n != 1);'),
    Plural('hne', 'Chhattisgarhi', 'nplurals=2; plural=(n != 1);'),
    Plural('hr', 'Croatian', 'nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);'),
    Plural('hu', 'Hungarian', 'nplurals=2; plural=(n != 1);'),
    Plural('hy', 'Armenian', 'nplurals=2; plural=(n != 1);'),
    Plural('ia', 'Interlingua', 'nplurals=2; plural=(n != 1);'),
    Plural('id', 'Indonesian', 'nplurals=1; plural=0;'),
    Plural('is', 'Icelandic', 'nplurals=2; plural=(n%10!=1 || n%100==11);'),
    Plural('it', 'Italian', 'nplurals=2; plural=(n != 1);'),
    Plural('ja', 'Japanese', 'nplurals=1; plural=0;'),
    Plural('jbo', 'Lojban', 'nplurals=1; plural=0;'),
    Plural('jv', 'Javanese', 'nplurals=2; plural=(n != 0);'),
    Plural('ka', 'Georgian', 'nplurals=1; plural=0;'),
    Plural('kk', 'Kazakh', 'nplurals=2; plural=(n != 1);'),
    Plural('kl', 'Greenlandic', 'nplurals=2; plural=(n != 1);'),
    Plural('km', 'Khmer', 'nplurals=1; plural=0;'),
    Plural('kn', 'Kannada', 'nplurals=2; plural=(n != 1);'),
    Plural('ko', 'Korean', 'nplurals=1; plural=0;'),
    Plural('ku', 'Kurdish', 'nplurals=2; plural=(n != 1);'),
    Plural('kw', 'Cornish', 'nplurals=4; plural=(n==1) ? 0 : (n==2) ? 1 : (n == 3) ? 2 : 3;'),
    Plural('ky', 'Kyrgyz', 'nplurals=2; plural=(n != 1);'),
    Plural('lb', 'Letzeburgesch', 'nplurals=2; plural=(n != 1);'),
    Plural('ln', 'Lingala', 'nplurals=2; plural=(n > 1);'),
    Plural('lo', 'Lao', 'nplurals=1; plural=0;'),
    Plural('lt', 'Lithuanian', 'nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && (n%100<10 || n%100>=20) ? 1 : 2);'),
    Plural('lv', 'Latvian', 'nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n != 0 ? 1 : 2);'),
    Plural('mai', 'Maithili', 'nplurals=2; plural=(n != 1);'),
    Plural('me', 'Montenegro', 'nplurals=3; plural=n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2;'),
    Plural('mfe', 'Mauritian Creole', 'nplurals=2; plural=(n > 1);'),
    Plural('mg', 'Malagasy', 'nplurals=2; plural=(n > 1);'),
    Plural('mi', 'Maori', 'nplurals=2; plural=(n > 1);'),
    Plural('mk', 'Macedonian', 'nplurals=2; plural= n==1 || n%10==1 ? 0 : 1; Can’t be correct needs a 2 somewhere'),
    Plural('ml', 'Malayalam', 'nplurals=2; plural=(n != 1);'),
    Plural('mn', 'Mongolian', 'nplurals=2; plural=(n != 1);'),
    Plural('mni', 'Manipuri', 'nplurals=2; plural=(n != 1);'),
    Plural('mnk', 'Mandinka', 'nplurals=3; plural=(n==0 ? 0 : n==1 ? 1 : 2);'),
    Plural('mr', 'Marathi', 'nplurals=2; plural=(n != 1);'),
    Plural('ms', 'Malay', 'nplurals=1; plural=0;'),
    Plural('mt', 'Maltese', 'nplurals=4; plural=(n==1 ? 0 : n==0 || ( n%100>1 && n%100<11) ? 1 : (n%100>10 && n%100<20 ) ? 2 : 3);'),
    Plural('my', 'Burmese', 'nplurals=1; plural=0;'),
    Plural('nah', 'Nahuatl', 'nplurals=2; plural=(n != 1);'),
    Plural('nap', 'Neapolitan', 'nplurals=2; plural=(n != 1);'),
    Plural('nb', 'Norwegian Bokmal', 'nplurals=2; plural=(n != 1);'),
    Plural('ne', 'Nepali', 'nplurals=2; plural=(n != 1);'),
    Plural('nl', 'Dutch', 'nplurals=2; plural=(n != 1);'),
    Plural('nn', 'Norwegian Nynorsk', 'nplurals=2; plural=(n != 1);'),
    Plural('no', 'Norwegian (old code)', 'nplurals=2; plural=(n != 1);'),
    Plural('nso', 'Northern Sotho', 'nplurals=2; plural=(n != 1);'),
    Plural('oc', 'Occitan', 'nplurals=2; plural=(n > 1);'),
    Plural('or', 'Oriya', 'nplurals=2; plural=(n != 1);'),
    Plural('pa', 'Punjabi', 'nplurals=2; plural=(n != 1);'),
    Plural('pap', 'Papiamento', 'nplurals=2; plural=(n != 1);'),
    Plural('pl', 'Polish', 'nplurals=3; plural=(n==1 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);'),
    Plural('pms', 'Piemontese', 'nplurals=2; plural=(n != 1);'),
    Plural('ps', 'Pashto', 'nplurals=2; plural=(n != 1);'),
    Plural('pt', 'Portuguese', 'nplurals=2; plural=(n != 1);'),
    Plural('pt_BR', 'Brazilian Portuguese', 'nplurals=2; plural=(n > 1);'),
    Plural('rm', 'Romansh', 'nplurals=2; plural=(n != 1);'),
    Plural('ro', 'Romanian', 'nplurals=3; plural=(n==1 ? 0 : (n==0 || (n%100 > 0 && n%100 < 20)) ? 1 : 2);'),
    Plural('ru', 'Russian', 'nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);'),
    Plural('rw', 'Kinyarwanda', 'nplurals=2; plural=(n != 1);'),
    Plural('sah', 'Yakut', 'nplurals=1; plural=0;'),
    Plural('sat', 'Santali', 'nplurals=2; plural=(n != 1);'),
    Plural('sco', 'Scots', 'nplurals=2; plural=(n != 1);'),
    Plural('sd', 'Sindhi', 'nplurals=2; plural=(n != 1);'),
    Plural('se', 'Northern Sami', 'nplurals=2; plural=(n != 1);'),
    Plural('si', 'Sinhala', 'nplurals=2; plural=(n != 1);'),
    Plural('sk', 'Slovak', 'nplurals=3; plural=(n==1) ? 0 : (n>=2 && n<=4) ? 1 : 2;'),
    Plural('sl', 'Slovenian', 'nplurals=4; plural=(n%100==1 ? 0 : n%100==2 ? 1 : n%100==3 || n%100==4 ? 2 : 3);'),
    Plural('so', 'Somali', 'nplurals=2; plural=(n != 1);'),
    Plural('son', 'Songhay', 'nplurals=2; plural=(n != 1);'),
    Plural('sq', 'Albanian', 'nplurals=2; plural=(n != 1);'),
    Plural('sr', 'Serbian', 'nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);'),
    Plural('su', 'Sundanese', 'nplurals=1; plural=0;'),
    Plural('sv', 'Swedish', 'nplurals=2; plural=(n != 1);'),
    Plural('sw', 'Swahili', 'nplurals=2; plural=(n != 1);'),
    Plural('ta', 'Tamil', 'nplurals=2; plural=(n != 1);'),
    Plural('te', 'Telugu', 'nplurals=2; plural=(n != 1);'),
    Plural('tg', 'Tajik', 'nplurals=2; plural=(n > 1);'),
    Plural('th', 'Thai', 'nplurals=1; plural=0;'),
    Plural('ti', 'Tigrinya', 'nplurals=2; plural=(n > 1);'),
    Plural('tk', 'Turkmen', 'nplurals=2; plural=(n != 1);'),
    Plural('tr', 'Turkish', 'nplurals=2; plural=(n > 1);'),
    Plural('tt', 'Tatar', 'nplurals=1; plural=0;'),
    Plural('ug', 'Uyghur', 'nplurals=1; plural=0;'),
    Plural('uk', 'Ukrainian', 'nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);'),
    Plural('ur', 'Urdu', 'nplurals=2; plural=(n != 1);'),
    Plural('uz', 'Uzbek', 'nplurals=2; plural=(n > 1);'),
    Plural('vi', 'Vietnamese', 'nplurals=1; plural=0;'),
    Plural('wa', 'Walloon', 'nplurals=2; plural=(n > 1);'),
    Plural('wo', 'Wolof', 'nplurals=1; plural=0;'),
    Plural('yo', 'Yoruba', 'nplurals=2; plural=(n != 1);'),
    Plural('zh', 'Chinese [2]', 'nplurals=1; plural=0;'),
    Plural('zh', 'Chinese [3]', 'nplurals=2; plural=(n > 1);'),
)
